# This workflow will create new release with given tag, when a tag is pushed to master,
# will also auto generate changelog for the new release body.

name: Create Release

on:
  push:
    # branches:
      # - master
    tags:
      - 'v*'

jobs:
  release:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Generate changelog
        id: generate
        uses: mikepenz/release-changelog-builder-action@main
        with:
          configuration: '.github/release_changelog.json'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Get new tag
      #   id: newtag
      #   run: |
      #     echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      # - name: 'Get previous tag'
      #   id: previoustag
      #   uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: test
        run: ls -a && ls -a ../ && ls -a ../../

      # - name: Update changelog
        # env:
          # NEW_VERSION: ${{ steps.generate.outputs.toTag }}
          # PRE_VERSION: ${{ steps.generate.outputs.fromTag }}
        # run: |
        #   sed -n -e '/Changelog/,/Unreleased\n/1/p' CHANGELOG.md > NEW_CHANGELOG.md 
        #   echo \ >> NEW_CHANGELOG.md

        #   steps.Changelog.outputs.changelog >> NEW_CHANGELOG.md
        #   echo \ >> NEW_CHANGELOG.md

        #   sed -n -e '/a/,/b/1/p' CHANGELOG.md >> NEW_CHANGELOG.md
        #   echo \ >> NEW_CHANGELOG.md

        #   sed "s/v$PRE_VERSION...HEAD/$NEW_VERSION...HEAD/g" CHANGELOG.md > NEW_CHANGELOG.md
        #   sed "s+<\!-- new release here -->+<\!-- new release here -->\n\[v$NEW_VERSION]: https://github.com/leandergangso/pymysharesdk/compare/v$PRE_VERSION...$NEW_VERSION+g" CHANGELOG.md > NEW_CHANGELOG.md

        #   NEW_CHANGELOG.md > CHANGELOG.md
        #   rm NEW_CHANGELOG.md

      - name: Create release
        uses: actions/create-release@latest
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.generate.outputs.changelog }}
          prerelease: ${{ contains(github.ref, '-') }}
          draft: 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
