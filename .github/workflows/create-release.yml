# This workflow will create new release with given tag, when a tag is pushed,
# will also auto generate changelog for the new release body and update CHAGELOG.md.

name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # - name: Generate changelog only PR
      #   id: generate
      #   uses: mikepenz/release-changelog-builder-action@main
      #   with:
      #     configuration: '.github/release_changelog.json'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate changelog
        id: changelog
        uses: ardalanamini/auto-changelog@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude: "test, style"

      - name: Get current date
        id: date
        run: echo "name=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Edit changelog
        env:
          NEW_CONTENT: ${{ steps.changelog.outputs.changelog }}
          new_tag: ${{ github.ref }}
        run: |
          export pre_tag=$(sed -n 3p mysdk/version.py)
          echo $pre_tag
          sed -n '1,10' CHANGELOG.md > NEW_CHANGELOG.md
          echo $NEW_CONTENT >> NEW_CHANGELOG.md
          sed -n '11,999p' CHANGELOG.md >> NEW_CHANGELOG.md
          sed -i -e "s/__version__.*/__version__ = $new_tag/" mysdk/version.py

      - name: Update changelog
        uses: test-room-7/action-update-file@v1
        with:
          file-path: CHANGELOG.md
          commit-msg: Update CHANGELOG
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create release
      #   uses: actions/create-release@latest
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: ${{ github.ref }}
      #     body: ${{ steps.generate.outputs.changelog }}
      #     prerelease: ${{ contains(github.ref, '-') }}
            # prerelease: false
      #     draft: 'true'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
